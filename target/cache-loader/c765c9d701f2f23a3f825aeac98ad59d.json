{"remainingRequest":"/Users/mouhamedoumarou/git/hospitalsystem/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/mouhamedoumarou/git/hospitalsystem/node_modules/ts-loader/index.js??ref--9-3!/Users/mouhamedoumarou/git/hospitalsystem/node_modules/eslint-loader/dist/cjs.js!/Users/mouhamedoumarou/git/hospitalsystem/src/main/webapp/app/shared/alert/alert-error.component.ts","dependencies":[{"path":"/Users/mouhamedoumarou/git/hospitalsystem/src/main/webapp/app/shared/alert/alert-error.component.ts","mtime":1582318110871},{"path":"/Users/mouhamedoumarou/git/hospitalsystem/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/mouhamedoumarou/git/hospitalsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mouhamedoumarou/git/hospitalsystem/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mouhamedoumarou/git/hospitalsystem/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/mouhamedoumarou/git/hospitalsystem/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnOwppbXBvcnQgeyBKaGlFdmVudE1hbmFnZXIsIEpoaUFsZXJ0U2VydmljZSB9IGZyb20gJ25nLWpoaXBzdGVyJzsKbGV0IEpoaUFsZXJ0RXJyb3JDb21wb25lbnQgPSBjbGFzcyBKaGlBbGVydEVycm9yQ29tcG9uZW50IHsKICAgIGNvbnN0cnVjdG9yKGFsZXJ0U2VydmljZSwgZXZlbnRNYW5hZ2VyLCB0cmFuc2xhdGVTZXJ2aWNlKSB7CiAgICAgICAgdGhpcy5hbGVydFNlcnZpY2UgPSBhbGVydFNlcnZpY2U7CiAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIgPSBldmVudE1hbmFnZXI7CiAgICAgICAgdGhpcy5hbGVydHMgPSBbXTsKICAgICAgICB0aGlzLmNsZWFuSHR0cEVycm9yTGlzdGVuZXIgPSBldmVudE1hbmFnZXIuc3Vic2NyaWJlKCdob3NwaXRhbHN5c3RlbUFwcC5odHRwRXJyb3InLCByZXNwb25zZSA9PiB7CiAgICAgICAgICAgIGxldCBpOwogICAgICAgICAgICBjb25zdCBodHRwRXJyb3JSZXNwb25zZSA9IHJlc3BvbnNlLmNvbnRlbnQ7CiAgICAgICAgICAgIHN3aXRjaCAoaHR0cEVycm9yUmVzcG9uc2Uuc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAvLyBjb25uZWN0aW9uIHJlZnVzZWQsIHNlcnZlciBub3QgcmVhY2hhYmxlCiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KCdTZXJ2ZXIgbm90IHJlYWNoYWJsZScsICdlcnJvci5zZXJ2ZXIubm90LnJlYWNoYWJsZScpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSA0MDA6IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBhcnIgPSBodHRwRXJyb3JSZXNwb25zZS5oZWFkZXJzLmtleXMoKTsKICAgICAgICAgICAgICAgICAgICBsZXQgZXJyb3JIZWFkZXIgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIGxldCBlbnRpdHlLZXkgPSBudWxsOwogICAgICAgICAgICAgICAgICAgIGFyci5mb3JFYWNoKGVudHJ5ID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVudHJ5LnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoJ2FwcC1lcnJvcicpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvckhlYWRlciA9IGh0dHBFcnJvclJlc3BvbnNlLmhlYWRlcnMuZ2V0KGVudHJ5KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChlbnRyeS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKCdhcHAtcGFyYW1zJykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudGl0eUtleSA9IGh0dHBFcnJvclJlc3BvbnNlLmhlYWRlcnMuZ2V0KGVudHJ5KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGlmIChlcnJvckhlYWRlcikgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRpdHlOYW1lID0gdHJhbnNsYXRlU2VydmljZS5pbnN0YW50KCdnbG9iYWwubWVudS5lbnRpdGllcy4nICsgZW50aXR5S2V5KTsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KGVycm9ySGVhZGVyLCBlcnJvckhlYWRlciwgeyBlbnRpdHlOYW1lIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChodHRwRXJyb3JSZXNwb25zZS5lcnJvciAhPT0gJycgJiYgaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IuZmllbGRFcnJvcnMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGRFcnJvcnMgPSBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5maWVsZEVycm9yczsKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGZpZWxkRXJyb3JzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZEVycm9yID0gZmllbGRFcnJvcnNbaV07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoWydNaW4nLCAnTWF4JywgJ0RlY2ltYWxNaW4nLCAnRGVjaW1hbE1heCddLmluY2x1ZGVzKGZpZWxkRXJyb3IubWVzc2FnZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZEVycm9yLm1lc3NhZ2UgPSAnU2l6ZSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb252ZXJ0ICdzb21ldGhpbmdbMTRdLm90aGVyWzRdLmlkJyB0byAnc29tZXRoaW5nW10ub3RoZXJbXS5pZCcgc28gdHJhbnNsYXRpb25zIGNhbiBiZSB3cml0dGVuIHRvIGl0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJ0ZWRGaWVsZCA9IGZpZWxkRXJyb3IuZmllbGQucmVwbGFjZSgvXFtcZCpcXS9nLCAnW10nKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IHRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudCgnaG9zcGl0YWxzeXN0ZW1BcHAuJyArIGZpZWxkRXJyb3Iub2JqZWN0TmFtZSArICcuJyArIGNvbnZlcnRlZEZpZWxkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydCgnRXJyb3Igb24gZmllbGQgIicgKyBmaWVsZE5hbWUgKyAnIicsICdlcnJvci4nICsgZmllbGRFcnJvci5tZXNzYWdlLCB7IGZpZWxkTmFtZSB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChodHRwRXJyb3JSZXNwb25zZS5lcnJvciAhPT0gJycgJiYgaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSwgaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSwgaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IucGFyYW1zKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydChodHRwRXJyb3JSZXNwb25zZS5lcnJvcik7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY2FzZSA0MDQ6CiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KCdOb3QgZm91bmQnLCAnZXJyb3IudXJsLm5vdC5mb3VuZCcpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICBpZiAoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IgIT09ICcnICYmIGh0dHBFcnJvclJlc3BvbnNlLmVycm9yLm1lc3NhZ2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KGh0dHBFcnJvclJlc3BvbnNlLmVycm9yLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KGh0dHBFcnJvclJlc3BvbnNlLmVycm9yKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0KICAgIHNldENsYXNzZXMoYWxlcnQpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAnamhpLXRvYXN0JzogYWxlcnQudG9hc3QsCiAgICAgICAgICAgIFthbGVydC5wb3NpdGlvbl06IHRydWUKICAgICAgICB9OwogICAgfQogICAgbmdPbkRlc3Ryb3koKSB7CiAgICAgICAgaWYgKHRoaXMuY2xlYW5IdHRwRXJyb3JMaXN0ZW5lciAhPT0gdW5kZWZpbmVkICYmIHRoaXMuY2xlYW5IdHRwRXJyb3JMaXN0ZW5lciAhPT0gbnVsbCkgewogICAgICAgICAgICB0aGlzLmV2ZW50TWFuYWdlci5kZXN0cm95KHRoaXMuY2xlYW5IdHRwRXJyb3JMaXN0ZW5lcik7CiAgICAgICAgICAgIHRoaXMuYWxlcnRzID0gW107CiAgICAgICAgfQogICAgfQogICAgYWRkRXJyb3JBbGVydChtZXNzYWdlLCBrZXksIGRhdGEpIHsKICAgICAgICBtZXNzYWdlID0ga2V5ICYmIGtleSAhPT0gbnVsbCA/IGtleSA6IG1lc3NhZ2U7CiAgICAgICAgY29uc3QgbmV3QWxlcnQgPSB7CiAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInLAogICAgICAgICAgICBtc2c6IG1lc3NhZ2UsCiAgICAgICAgICAgIHBhcmFtczogZGF0YSwKICAgICAgICAgICAgdGltZW91dDogNTAwMCwKICAgICAgICAgICAgdG9hc3Q6IHRoaXMuYWxlcnRTZXJ2aWNlLmlzVG9hc3QoKSwKICAgICAgICAgICAgc2NvcGVkOiB0cnVlCiAgICAgICAgfTsKICAgICAgICB0aGlzLmFsZXJ0cy5wdXNoKHRoaXMuYWxlcnRTZXJ2aWNlLmFkZEFsZXJ0KG5ld0FsZXJ0LCB0aGlzLmFsZXJ0cykpOwogICAgfQp9OwpKaGlBbGVydEVycm9yQ29tcG9uZW50ID0gdHNsaWJfMS5fX2RlY29yYXRlKFsKICAgIENvbXBvbmVudCh7CiAgICAgICAgc2VsZWN0b3I6ICdqaGktYWxlcnQtZXJyb3InLAogICAgICAgIHRlbXBsYXRlOiBgCiAgICA8ZGl2IGNsYXNzPSJhbGVydHMiIHJvbGU9ImFsZXJ0Ij4KICAgICAgPGRpdiAqbmdGb3I9ImxldCBhbGVydCBvZiBhbGVydHMiIFtuZ0NsYXNzXT0ic2V0Q2xhc3NlcyhhbGVydCkiPgogICAgICAgIDxuZ2ItYWxlcnQgKm5nSWY9ImFsZXJ0ICYmIGFsZXJ0LnR5cGUgJiYgYWxlcnQubXNnIiBbdHlwZV09ImFsZXJ0LnR5cGUiIChjbG9zZSk9ImFsZXJ0LmNsb3NlKGFsZXJ0cykiPgogICAgICAgICAgPHByZSBbaW5uZXJIVE1MXT0iYWxlcnQubXNnIj48L3ByZT4KICAgICAgICA8L25nYi1hbGVydD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICBgCiAgICB9KSwKICAgIHRzbGliXzEuX19tZXRhZGF0YSgiZGVzaWduOnBhcmFtdHlwZXMiLCBbdHlwZW9mIChfYSA9IHR5cGVvZiBKaGlBbGVydFNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIEpoaUFsZXJ0U2VydmljZSkgPT09ICJmdW5jdGlvbiIgPyBfYSA6IE9iamVjdCwgdHlwZW9mIChfYiA9IHR5cGVvZiBKaGlFdmVudE1hbmFnZXIgIT09ICJ1bmRlZmluZWQiICYmIEpoaUV2ZW50TWFuYWdlcikgPT09ICJmdW5jdGlvbiIgPyBfYiA6IE9iamVjdCwgdHlwZW9mIChfYyA9IHR5cGVvZiBUcmFuc2xhdGVTZXJ2aWNlICE9PSAidW5kZWZpbmVkIiAmJiBUcmFuc2xhdGVTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9jIDogT2JqZWN0XSkKXSwgSmhpQWxlcnRFcnJvckNvbXBvbmVudCk7CmV4cG9ydCB7IEpoaUFsZXJ0RXJyb3JDb21wb25lbnQgfTsK"},{"version":3,"file":"/Users/mouhamedoumarou/git/hospitalsystem/src/main/webapp/app/shared/alert/alert-error.component.ts","sourceRoot":"","sources":["/Users/mouhamedoumarou/git/hospitalsystem/node_modules/eslint-loader/dist/cjs.js!/Users/mouhamedoumarou/git/hospitalsystem/src/main/webapp/app/shared/alert/alert-error.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlert, JhiAlertService } from 'ng-jhipster';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'jhi-alert-error',\n  template: `\n    <div class=\"alerts\" role=\"alert\">\n      <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n        <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"alert.close(alerts)\">\n          <pre [innerHTML]=\"alert.msg\"></pre>\n        </ngb-alert>\n      </div>\n    </div>\n  `\n})\nexport class JhiAlertErrorComponent implements OnDestroy {\n  alerts: any[];\n  cleanHttpErrorListener: Subscription;\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager, translateService: TranslateService) {\n    this.alerts = [];\n\n    this.cleanHttpErrorListener = eventManager.subscribe('hospitalsystemApp.httpError', response => {\n      let i;\n      const httpErrorResponse = response.content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader = null;\n          let entityKey = null;\n          arr.forEach(entry => {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          });\n          if (errorHeader) {\n            const entityName = translateService.instant('global.menu.entities.' + entityKey);\n            this.addErrorAlert(errorHeader, errorHeader, { entityName });\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (i = 0; i < fieldErrors.length; i++) {\n              const fieldError = fieldErrors[i];\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = translateService.instant('hospitalsystemApp.' + fieldError.objectName + '.' + convertedField);\n              this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n          break;\n        }\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert) {\n    return {\n      'jhi-toast': alert.toast,\n      [alert.position]: true\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\n      this.eventManager.destroy(this.cleanHttpErrorListener);\n      this.alerts = [];\n    }\n  }\n\n  addErrorAlert(message, key?, data?) {\n    message = key && key !== null ? key : message;\n\n    const newAlert: JhiAlert = {\n      type: 'danger',\n      msg: message,\n      params: data,\n      timeout: 5000,\n      toast: this.alertService.isToast(),\n      scoped: true\n    };\n\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\n  }\n}\n"]}]}